// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: marshaler/marshaler.proto

package marshalerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Choice int32

const (
	Choice_CHOICE_UNSPECIFIED Choice = 0
	Choice_CHOICE_ONE         Choice = 1
	Choice_CHOICE_TWO         Choice = 2
	Choice_CHOICE_THREE       Choice = 3
)

// Enum value maps for Choice.
var (
	Choice_name = map[int32]string{
		0: "CHOICE_UNSPECIFIED",
		1: "CHOICE_ONE",
		2: "CHOICE_TWO",
		3: "CHOICE_THREE",
	}
	Choice_value = map[string]int32{
		"CHOICE_UNSPECIFIED": 0,
		"CHOICE_ONE":         1,
		"CHOICE_TWO":         2,
		"CHOICE_THREE":       3,
	}
)

func (x Choice) Enum() *Choice {
	p := new(Choice)
	*p = x
	return p
}

func (x Choice) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Choice) Descriptor() protoreflect.EnumDescriptor {
	return file_marshaler_marshaler_proto_enumTypes[0].Descriptor()
}

func (Choice) Type() protoreflect.EnumType {
	return &file_marshaler_marshaler_proto_enumTypes[0]
}

func (x Choice) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Choice.Descriptor instead.
func (Choice) EnumDescriptor() ([]byte, []int) {
	return file_marshaler_marshaler_proto_rawDescGZIP(), []int{0}
}

type Marshaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map      map[string]string `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Array    []string          `protobuf:"bytes,2,rep,name=array,proto3" json:"array,omitempty"`
	Bool     bool              `protobuf:"varint,3,opt,name=bool,proto3" json:"bool,omitempty"`
	String_  string            `protobuf:"bytes,4,opt,name=string,proto3" json:"string,omitempty"`
	Bytes    []byte            `protobuf:"bytes,5,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Enum     Choice            `protobuf:"varint,6,opt,name=enum,proto3,enum=zapf.marshaler.Choice" json:"enum,omitempty"`
	Float    float32           `protobuf:"fixed32,7,opt,name=float,proto3" json:"float,omitempty"`
	Double   float64           `protobuf:"fixed64,8,opt,name=double,proto3" json:"double,omitempty"`
	Int32    int32             `protobuf:"varint,9,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64    int64             `protobuf:"varint,10,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32   uint32            `protobuf:"varint,11,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   uint64            `protobuf:"varint,12,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   int32             `protobuf:"zigzag32,13,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   int64             `protobuf:"zigzag64,14,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  uint32            `protobuf:"fixed32,15,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  uint64            `protobuf:"fixed64,16,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 int32             `protobuf:"fixed32,17,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 int64             `protobuf:"fixed64,18,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*Marshaler_Any
	//	*Marshaler_Message
	Payload isMarshaler_Payload `protobuf_oneof:"payload"`
}

func (x *Marshaler) Reset() {
	*x = Marshaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marshaler_marshaler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Marshaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Marshaler) ProtoMessage() {}

func (x *Marshaler) ProtoReflect() protoreflect.Message {
	mi := &file_marshaler_marshaler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Marshaler.ProtoReflect.Descriptor instead.
func (*Marshaler) Descriptor() ([]byte, []int) {
	return file_marshaler_marshaler_proto_rawDescGZIP(), []int{0}
}

func (x *Marshaler) GetMap() map[string]string {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *Marshaler) GetArray() []string {
	if x != nil {
		return x.Array
	}
	return nil
}

func (x *Marshaler) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *Marshaler) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *Marshaler) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *Marshaler) GetEnum() Choice {
	if x != nil {
		return x.Enum
	}
	return Choice_CHOICE_UNSPECIFIED
}

func (x *Marshaler) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *Marshaler) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *Marshaler) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *Marshaler) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *Marshaler) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *Marshaler) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *Marshaler) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *Marshaler) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *Marshaler) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *Marshaler) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *Marshaler) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *Marshaler) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (m *Marshaler) GetPayload() isMarshaler_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Marshaler) GetAny() *anypb.Any {
	if x, ok := x.GetPayload().(*Marshaler_Any); ok {
		return x.Any
	}
	return nil
}

func (x *Marshaler) GetMessage() *Message {
	if x, ok := x.GetPayload().(*Marshaler_Message); ok {
		return x.Message
	}
	return nil
}

type isMarshaler_Payload interface {
	isMarshaler_Payload()
}

type Marshaler_Any struct {
	Any *anypb.Any `protobuf:"bytes,19,opt,name=any,proto3,oneof"`
}

type Marshaler_Message struct {
	Message *Message `protobuf:"bytes,20,opt,name=message,proto3,oneof"`
}

func (*Marshaler_Any) isMarshaler_Payload() {}

func (*Marshaler_Message) isMarshaler_Payload() {}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marshaler_marshaler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_marshaler_marshaler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_marshaler_marshaler_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_marshaler_marshaler_proto protoreflect.FileDescriptor

var file_marshaler_marshaler_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x72, 0x73,
	0x68, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x7a, 0x61, 0x70,
	0x66, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x65, 0x72, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x05, 0x0a, 0x09, 0x4d, 0x61, 0x72, 0x73, 0x68,
	0x61, 0x6c, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x61, 0x70, 0x66, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c,
	0x65, 0x72, 0x2e, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72,
	0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x7a, 0x61, 0x70, 0x66, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x65,
	0x72, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x08,
	0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x18, 0x12, 0x20, 0x01, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x12, 0x28, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x79, 0x12, 0x33,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x7a, 0x61, 0x70, 0x66, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x65, 0x72,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x36, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x2a, 0x52, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x12, 0x43, 0x48, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x4f, 0x49, 0x43,
	0x45, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x4f, 0x49, 0x43,
	0x45, 0x5f, 0x54, 0x57, 0x4f, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x48, 0x4f, 0x49, 0x43,
	0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x03, 0x42, 0xba, 0x01, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x2e, 0x7a, 0x61, 0x70, 0x66, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x65, 0x72,
	0x42, 0x0e, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x64, 0x7a, 0x69, 0x6c, 0x2f, 0x7a, 0x61, 0x70, 0x66, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61,
	0x6c, 0x65, 0x72, 0x3b, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x65, 0x72, 0x70, 0x62, 0xa2,
	0x02, 0x03, 0x5a, 0x4d, 0x58, 0xaa, 0x02, 0x0e, 0x5a, 0x61, 0x70, 0x66, 0x2e, 0x4d, 0x61, 0x72,
	0x73, 0x68, 0x61, 0x6c, 0x65, 0x72, 0xca, 0x02, 0x0e, 0x5a, 0x61, 0x70, 0x66, 0x5c, 0x4d, 0x61,
	0x72, 0x73, 0x68, 0x61, 0x6c, 0x65, 0x72, 0xe2, 0x02, 0x1a, 0x5a, 0x61, 0x70, 0x66, 0x5c, 0x4d,
	0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x5a, 0x61, 0x70, 0x66, 0x3a, 0x3a, 0x4d, 0x61, 0x72,
	0x73, 0x68, 0x61, 0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_marshaler_marshaler_proto_rawDescOnce sync.Once
	file_marshaler_marshaler_proto_rawDescData = file_marshaler_marshaler_proto_rawDesc
)

func file_marshaler_marshaler_proto_rawDescGZIP() []byte {
	file_marshaler_marshaler_proto_rawDescOnce.Do(func() {
		file_marshaler_marshaler_proto_rawDescData = protoimpl.X.CompressGZIP(file_marshaler_marshaler_proto_rawDescData)
	})
	return file_marshaler_marshaler_proto_rawDescData
}

var file_marshaler_marshaler_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_marshaler_marshaler_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_marshaler_marshaler_proto_goTypes = []interface{}{
	(Choice)(0),       // 0: zapf.marshaler.Choice
	(*Marshaler)(nil), // 1: zapf.marshaler.Marshaler
	(*Message)(nil),   // 2: zapf.marshaler.Message
	nil,               // 3: zapf.marshaler.Marshaler.MapEntry
	(*anypb.Any)(nil), // 4: google.protobuf.Any
}
var file_marshaler_marshaler_proto_depIdxs = []int32{
	3, // 0: zapf.marshaler.Marshaler.map:type_name -> zapf.marshaler.Marshaler.MapEntry
	0, // 1: zapf.marshaler.Marshaler.enum:type_name -> zapf.marshaler.Choice
	4, // 2: zapf.marshaler.Marshaler.any:type_name -> google.protobuf.Any
	2, // 3: zapf.marshaler.Marshaler.message:type_name -> zapf.marshaler.Message
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_marshaler_marshaler_proto_init() }
func file_marshaler_marshaler_proto_init() {
	if File_marshaler_marshaler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_marshaler_marshaler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Marshaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marshaler_marshaler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_marshaler_marshaler_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Marshaler_Any)(nil),
		(*Marshaler_Message)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_marshaler_marshaler_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_marshaler_marshaler_proto_goTypes,
		DependencyIndexes: file_marshaler_marshaler_proto_depIdxs,
		EnumInfos:         file_marshaler_marshaler_proto_enumTypes,
		MessageInfos:      file_marshaler_marshaler_proto_msgTypes,
	}.Build()
	File_marshaler_marshaler_proto = out.File
	file_marshaler_marshaler_proto_rawDesc = nil
	file_marshaler_marshaler_proto_goTypes = nil
	file_marshaler_marshaler_proto_depIdxs = nil
}
